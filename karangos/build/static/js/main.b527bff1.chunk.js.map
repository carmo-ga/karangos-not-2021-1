{"version":3,"sources":["img/karangos.png","ui/MainMenu.js","ui/TopBar.js","ui/FooterBar.js","ui/ConfirmDialog.js","routed/KarangosList2.js","routed/KarangosForm.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","menuButton","marginRight","spacing","menuLink","color","palette","text","primary","textDecoration","MainMenu","classes","React","useState","anchorEl","setAnchorEl","handleClose","edge","className","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","to","root","flexGrow","logo","width","TopBar","AppBar","position","Toolbar","src","logoImg","alt","secondary","toolbar","backgroundColor","background","paper","minHeight","bottom","link","light","FooterBar","Typography","variant","align","fontSize","href","ConfirmDialog","title","isOpen","children","result","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","table","minWidth","dataGrid","visibility","justifyContent","paddingRight","margin","KarangosList","karangos","setKarangos","deletable","setDeletable","dialogOpen","setDialogOpen","sbOpen","setSbOpen","sbSeverity","setSbSeverity","sbMessage","setSbMessage","history","useHistory","getData","a","axios","get","response","data","length","console","error","delete","message","handleSbClose","useEffect","setTimeout","columns","field","headerName","headerAlign","flex","sortComparator","v1","v2","Number","renderCell","params","Checkbox","checked","value","readOnly","valueFormatter","toLocaleString","style","currency","IconButton","push","deleteItem","Snackbar","autoHideDuration","elevation","severity","size","startIcon","Paper","rows","pageSize","autoHeight","disableSelectionOnClick","form","maxWidth","display","flexWrap","marginBottom","marginTop","checkbox","alignItems","formatChars","KarangosForm","marca","modelo","cor","ano_fabricacao","Date","getFullYear","importado","placa","preco","karango","setKarango","currentId","importadoChecked","setImportadoChecked","snackState","setSnackState","disabled","label","btnSendState","setError","isModified","setIsModified","setTitle","useParams","handleInputChange","property","karangoTemp","importadoCheckedTemp","target","newState","toUpperCase","validate","errorTemp","isValid","trim","includes","isNaN","Alert","props","handleSnackClose","reason","TextField","onChange","fullWidth","required","helperText","select","i","years","map","year","mask","type","onFocus","InputProps","startAdornment","InputAdornment","FormControl","FormControlLabel","control","JSON","stringify","createMuiTheme","main","yellow","pink","box","default","paddingBottom","routed","padding","fontFamily","typography","Main","Box","path","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAe,MAA0B,qC,iECQnCA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,WAAY,CACRC,YAAaF,EAAMG,QAAQ,IAE/BC,SAAU,CACNC,MAAOL,EAAMM,QAAQC,KAAKC,QAC1BC,eAAgB,YAIT,SAASC,IACpB,IAAMC,EAAUb,IAEhB,EAAgCc,IAAMC,SAAS,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAMMC,EAAc,WAChBD,EAAY,OAGhB,OACI,gCACI,cAAC,IAAD,CAAYE,KAAK,QAAQC,UAAWP,EAAQV,WAAYI,MAAM,UAAUc,aAAW,OAAOC,gBAAc,cAAcC,gBAAc,OAAOC,QAV/H,SAACC,GACjBR,EAAYQ,EAAMC,gBASd,SACI,cAAC,IAAD,MAEJ,eAACC,EAAA,EAAD,CACIC,GAAG,cACHZ,SAAUA,EACVa,aAAW,EACXC,KAAMC,QAAQf,GACdgB,QAASd,EALb,UAOI,cAACe,EAAA,EAAD,CAAUT,QAASN,EAAnB,SAAgC,cAAC,IAAD,CAAME,UAAWP,EAAQP,SAAU4B,GAAG,QAAtC,oCAChC,cAACD,EAAA,EAAD,CAAUT,QAASN,EAAnB,SAAgC,cAAC,IAAD,CAAME,UAAWP,EAAQP,SAAU4B,GAAG,OAAtC,4CCrChD,IAAMlC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCiC,KAAM,CACFC,SAAU,GAEdjC,WAAY,CACRC,YAAaF,EAAMG,QAAQ,IAE/BgC,KAAM,CACFC,MAAO,aAIA,SAASC,IACpB,IAAM1B,EAAUb,IAEhB,OACI,qBAAKoB,UAAWP,EAAQsB,KAAxB,SACI,cAACK,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,WACI,cAAC9B,EAAD,IACA,qBAAK+B,IAAKC,EAASxB,UAAWP,EAAQwB,KAAMQ,IAAI,6B,8BCtB9D7C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCO,KAAM,CAEF6B,MAAO,OACP/B,MAAOL,EAAMM,QAAQC,KAAKqC,WAE9BC,QAAS,CACLC,gBAAiB9C,EAAMM,QAAQyC,WAAWC,MAC1CC,UAAW,OAEXb,MAAO,OACPG,SAAU,QACVW,OAAQ,GAEZC,KAAM,CACF9C,MAAOL,EAAMM,QAAQsC,UAAUQ,MAC/B3C,eAAgB,OAChB,UAAW,CACPA,eAAgB,kBAKb,SAAS4C,IACpB,IAAM1C,EAAUb,IAChB,OACI,cAAC0C,EAAA,EAAD,CAAStB,UAAWP,EAAQkC,QAA5B,SACI,eAACS,EAAA,EAAD,CAAYC,QAAQ,UAAUC,MAAM,SAAStC,UAAWP,EAAQJ,KAAhE,8BACqB,cAAC,IAAD,CAAsBkD,SAAS,UADpD,QACmE,mBAAGC,KAAK,6BAA6BxC,UAAWP,EAAQwC,KAAxD,wB,kPCzBhE,SAASQ,GAAT,GAAkF,IAAD,IAAzDC,aAAyD,MAAjD,YAAiD,MAApCC,cAAoC,SAApB/B,EAAoB,EAApBA,QAASgC,EAAW,EAAXA,SAE3E9C,EAAc,SAAC+C,GAEdjC,GAASA,EAAQiC,IAGxB,OACI,8BACI,eAACC,EAAA,EAAD,CACIpC,KAAMiC,EACN/B,QAAS,kBAAMd,GAAY,IAC3BiD,kBAAgB,qBAChBC,mBAAiB,2BAJrB,UAMI,cAACC,GAAA,EAAD,CAAazC,GAAG,qBAAhB,SAAsCkC,IACtC,cAACQ,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAmB3C,GAAG,2BAAtB,SACKoC,MAGT,eAACQ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAQjD,QAAS,kBAAMN,GAAY,IAAOX,MAAM,UAAhD,gBAGA,cAACkE,EAAA,EAAD,CAAQjD,QAAS,kBAAMN,GAAY,IAAQX,MAAM,UAAUmE,WAAS,EAApE,8B,kCCfd1E,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCyE,MAAO,CACHC,SAAU,KAEdC,SAAU,CACN,4BAA6B,CACzBC,WAAY,UAEhB,kCAAmC,CAC/BA,WAAY,YAGpB/B,QAAS,CACLgC,eAAgB,WAChBC,aAAc,EACdC,OAAQ/E,EAAMG,QAAQ,EAAG,QAIlB,SAAS6E,KACpB,IAAMrE,EAAUb,KAGhB,EAAgCe,mBAAS,IAAzC,mBAAOoE,EAAP,KAAiBC,EAAjB,KACA,EAAkCrE,qBAAlC,mBAAOsE,EAAP,KAAkBC,EAAlB,KACA,EAAoCvE,oBAAS,GAA7C,mBAAOwE,EAAP,KAAmBC,EAAnB,KACA,EAA4BzE,oBAAS,GAArC,mBAAO0E,EAAP,KAAeC,EAAf,KACA,EAAoC3E,mBAAS,WAA7C,mBAAO4E,EAAP,KAAmBC,EAAnB,KACA,EAAkC7E,mBAAS,sCAA3C,mBAAO8E,EAAP,KAAkBC,EAAlB,KAEMC,EAAUC,cAXmB,SAmBpBC,IAnBoB,2EAmBnC,4BAAAC,EAAA,+EAE6BC,IAAMC,IAAI,4DAFvC,QAEYC,EAFZ,QAGoBC,KAAKC,OAAS,GAAGnB,EAAYiB,EAASC,MAH1D,gDAMQE,QAAQC,MAAR,MANR,0DAnBmC,kEA6BnC,sBAAAP,EAAA,+EAEcC,IAAMO,OAAN,mDAAyDrB,IAFvE,OAGQY,IACAL,EAAc,WACdE,EAAa,qCALrB,gDAQQF,EAAc,SACdE,EAAa,SAAW,KAAMa,SATtC,QAWIjB,GAAU,GAXd,0DA7BmC,sBAuDnC,SAASkB,IACLlB,GAAU,GA3CdmB,qBAAU,WAENC,YAAW,kBAAMb,MAAW,OAC7B,IA2CH,IAAMc,EAAU,CACZ,CACIC,MAAO,KACPC,WAAY,UACZvD,MAAO,QACPwD,YAAa,QACbC,MAAM,EAENC,eAAgB,SAACC,EAAIC,GAAL,OAAYC,OAAOF,GAAME,OAAOD,GAAM,GAAK,IAE/D,CACIN,MAAO,QACPC,WAAY,QACZE,MAAM,GAEV,CACIH,MAAO,SACPC,WAAY,SACZE,MAAM,GAEV,CACIH,MAAO,MACPC,WAAY,MACZvD,MAAO,SACPwD,YAAa,SACbC,MAAM,GAEV,CACIH,MAAO,iBACPC,WAAY,MACZvD,MAAO,SACPwD,YAAa,SACbC,MAAM,EACNC,eAAgB,SAACC,EAAIC,GAAL,OAAYC,OAAOF,GAAME,OAAOD,GAAM,GAAK,IAE/D,CACIN,MAAO,YACPC,WAAY,aACZvD,MAAO,SACPwD,YAAa,SACbC,MAAM,EACNK,WAAY,SAAAC,GAAM,OACd,cAACC,EAAA,EAAD,CAAUC,QAA0B,MAAjBF,EAAOG,MAAeC,UAAQ,MAGzD,CACIb,MAAO,QACPC,WAAY,QACZvD,MAAO,SACPwD,YAAa,SACbC,MAAM,GAEV,CACIH,MAAO,QACPC,WAAY,WACZvD,MAAO,QACPwD,YAAa,QACbC,MAAM,EACNW,eAAgB,SAAAL,GAAM,OAClBF,OAAOE,EAAOG,OAAOG,eAAe,QAAS,CAAEC,MAAO,WAAYC,SAAU,SAEhFb,eAAgB,SAACC,EAAIC,GAAL,OAAYC,OAAOF,GAAME,OAAOD,GAAM,GAAK,IAE/D,CACIN,MAAO,SACPC,WAAY,SACZvD,MAAO,SACPwD,YAAa,SACbC,MAAM,EACNK,WAAY,SAAAC,GAAM,OACd,cAACS,EAAA,EAAD,CAAY7G,aAAW,SAASG,QAAS,kBAAMuE,EAAQoC,KAAR,gBAAsBV,EAAO7F,MAA5E,SACI,cAAC,IAAD,QAIZ,CACIoF,MAAO,UACPC,WAAY,UACZvD,MAAO,SACPwD,YAAa,SACbC,MAAM,EACNK,WAAY,SAAAC,GAAM,OACd,cAACS,EAAA,EAAD,CAAY7G,aAAW,UAAUG,QAAS,kBA3FhCI,EA2FmD6F,EAAO7F,GA1F5E0D,EAAa1D,QACb4D,GAAc,GAFlB,IAAsB5D,GA2FV,SACI,cAAC,IAAD,CAAYrB,MAAM,eAMlC,OACI,qCACI,cAACsD,GAAD,CAAeE,OAAQwB,EAAYvD,QA3G3C,SAA2BiC,GACvBuB,GAAc,GAGXvB,GA/C4B,mCA+CpBmE,IAuGP,oDAIA,cAACC,GAAA,EAAD,CAAUvG,KAAM2D,EAAQ6C,iBAAkB,IAAMtG,QAAS4E,EAAzD,SACI,cAAC,KAAD,CAAU2B,UAAW,EAAG9E,QAAQ,SAASzB,QAAS4E,EAAe4B,SAAU7C,EAA3E,SACKE,MAIT,sDACA,cAACnD,EAAA,EAAD,CAAStB,UAAWP,EAAQkC,QAA5B,SACI,cAAC0B,EAAA,EAAD,CAAQlE,MAAM,YAAYkD,QAAQ,YAAYgF,KAAK,QACnDC,UAAW,cAAC,IAAD,IAAgBlH,QAAS,kBAAMuE,EAAQoC,KAAK,SADvD,4BAKJ,cAACQ,EAAA,EAAD,CAAOJ,UAAW,EAAlB,SACI,cAAC,KAAD,CAAUnH,UAAWP,EAAQgE,SAAU+D,KAAMzD,EAAU4B,QAASA,EAAS8B,SAAU,GAAIC,YAAY,EAAMC,yBAAyB,S,yEC5L5I/I,GAAYC,aAAW,iBAAO,CAChC+I,KAAM,CACFC,SAAU,MACVhE,OAAQ,SACRiE,QAAS,OACTnE,eAAgB,eAChBoE,SAAU,OACV,yBAA0B,CACtBvE,SAAU,QACVqE,SAAU,QACVhE,OAAQ,gBACRmE,aAAc,SAGtBrG,QAAS,CACLsG,UAAW,OACX/G,MAAO,OACP4G,QAAS,OACTnE,eAAgB,gBAEpBuE,SAAU,CACNC,WAAY,cAYdC,GAAc,CAChB,EAAK,WACL,EAAK,QACL,IAAK,eAUM,SAASC,KACpB,IAAM5I,EAAUb,KAEhB,EAA8Be,mBAAS,CACnCa,GAAI,KACJ8H,MAAO,GACPC,OAAQ,GACRC,IAAK,GACLC,gBAAiB,IAAIC,MAAQC,cAC7BC,UAAW,IACXC,MAAO,GACPC,MAAO,IARX,mBAAOC,EAAP,KAAgBC,EAAhB,KAUA,EAAkCrJ,qBAAlC,mBAAOsJ,EAAP,KACA,GADA,KACgDtJ,sBAAhD,mBAAOuJ,EAAP,KAAyBC,EAAzB,KAEA,EAAoCxJ,mBAAS,CACzCe,MAAM,EACN0G,SAAU,UACV7B,QAAS,8BAHb,mBAAO6D,EAAP,KAAmBC,EAAnB,KAMA,EAAwC1J,mBAAS,CAC7C2J,UAAU,EACVC,MAAO,WAFX,mBAAOC,EAAP,KAKA,GALA,KAK0B7J,mBAAS,CAC/B2I,MAAO,GACPC,OAAQ,GACRC,IAAK,GACLK,MAAO,GACPC,MAAO,MALX,mBAAOzD,EAAP,KAAcoE,EAAd,KAQA,EAAoC9J,oBAAS,GAA7C,mBAAO+J,EAAP,KAAmBC,EAAnB,KAEA,EAAoChK,oBAAS,GAA7C,mBAAOwE,EAAP,KAAmBC,EAAnB,KAEA,EAA0BzE,mBAAS,0BAAnC,mBAAO+C,EAAP,KAAckH,EAAd,KAEMjF,EAAUC,cACVyB,EAASwD,cA1CoB,4CAoDnC,WAAuBrJ,GAAvB,eAAAsE,EAAA,+EAE6BC,IAAMC,IAAN,kDAAqDxE,IAFlF,OAEYyE,EAFZ,OAGQ+D,EAAW/D,EAASC,MAH5B,gDAMQmE,EAAc,CACV3I,MAAM,EACN0G,SAAU,QACV7B,QAAS,gEATrB,0DApDmC,sBAkEnC,SAASuE,EAAkBzJ,EAAO0J,GAE9B,IAAMC,EAAW,gBAAOjB,GACpBkB,EAAuBf,EAK3B,GAFG7I,EAAM6J,OAAO1J,KAAIuJ,EAAW1J,EAAM6J,OAAO1J,IAE5B,cAAbuJ,EAA0B,CACzB,IAAMI,GAAYjB,EAElBc,EAAYpB,UAAauB,EAAW,IAAK,IAEzCF,EAAuBE,OAIvBH,EAAYD,GAFK,UAAbA,EAEoB1J,EAAM6J,OAAO1D,MAAM4D,cAMnB/J,EAAM6J,OAAO1D,MAEzCwC,EAAWgB,GACXb,EAAoBc,GACpBN,GAAc,GACdU,EAASL,GAGb,SAASK,EAASnF,GACd,IAAMoF,EAAY,CACdhC,MAAO,GACPC,OAAQ,GACRC,IAAK,GACLK,MAAO,GACPC,MAAO,IAEPyB,GAAU,EAoCd,MAhCyB,KAAtBrF,EAAKoD,MAAMkC,SACVF,EAAUhC,MAAQ,8BAClBiC,GAAU,GAIY,KAAvBrF,EAAKqD,OAAOiC,SACXF,EAAU/B,OAAS,+BACnBgC,GAAU,GAIS,KAApBrF,EAAKsD,IAAIgC,SACRF,EAAU9B,IAAM,kBAChB+B,GAAU,IAKW,KAAtBrF,EAAK2D,MAAM2B,QAAiBtF,EAAK2D,MAAM4B,SAAS,QAC/CH,EAAUzB,MAAQ,2CAClB0B,GAAU,IAKXG,MAAMxF,EAAK4D,QAAU3C,OAAOjB,EAAK4D,QAAU,KAC1CwB,EAAUxB,MAAQ,kDAClByB,GAAU,GAGdd,EAASa,GACFC,EA6CX,SAASI,EAAMC,GACX,OAAO,cAAC,KAAD,cAAUzD,UAAW,EAAG9E,QAAQ,UAAauI,IAGxD,SAASC,EAAiBxK,EAAOyK,GAEf,cAAXA,IACHzB,EAAc,6BAAID,GAAL,IAAiB1I,MAAM,KAGpCiE,EAAQoC,KAAK,UAiBjB,OAzKAtB,qBAAU,WAEHY,EAAO7F,KACNoJ,EAAS,oBA/CkB,oCAgD3B/E,CAAQwB,EAAO7F,OAEpB,IAoKC,qCACI,cAACiC,GAAD,CAAeE,OAAQwB,EAAYvD,QAhB3C,SAA2BiC,GACvBuB,GAAc,GAGXvB,GAAQ8B,EAAQoC,KAAK,UAYpB,iEAIA,cAACE,GAAA,EAAD,CAAUvG,KAAM0I,EAAW1I,KAAMwG,iBAAkB,IAAMtG,QAASiK,EAAlE,SACI,cAACF,EAAD,CAAO/J,QAASiK,EAAkBzD,SAAUgC,EAAWhC,SAAvD,SACKgC,EAAW7D,YAIpB,6BAAK7C,IACL,uBAAM1C,UAAWP,EAAQmI,KAAzB,UACI,cAACmD,GAAA,EAAD,CACIvK,GAAG,QACH+I,MAAM,QACNlH,QAAQ,SACRmE,MAAOuC,EAAQT,MACf0C,SAAUlB,EACVmB,WAAS,EACTC,UAAQ,EACR7F,MAAuB,KAAhBA,EAAMiD,MACb6C,WAAY9F,EAAMiD,QAGtB,cAACyC,GAAA,EAAD,CACIvK,GAAG,SACH+I,MAAM,SACNlH,QAAQ,SACRmE,MAAOuC,EAAQR,OACfyC,SAAUlB,EACVmB,WAAS,EACTC,UAAQ,EACR7F,MAAwB,KAAjBA,EAAMkD,OACb4C,WAAY9F,EAAMkD,SAGtB,eAACwC,GAAA,EAAD,CACIvK,GAAG,MACH+I,MAAM,MACNlH,QAAQ,SACRmE,MAAOuC,EAAQP,IACfwC,SAAU,SAAA3K,GAAK,OAAIyJ,EAAkBzJ,EAAO,QAC5C+K,QAAM,EACNH,WAAS,EACTC,UAAQ,EACR7F,MAAqB,KAAdA,EAAMmD,IACb2C,WAAY9F,EAAMmD,IAVtB,UAYI,cAAC3H,EAAA,EAAD,CAAU2F,MAAM,UAAhB,qBACA,cAAC3F,EAAA,EAAD,CAAU2F,MAAM,OAAhB,kBACA,cAAC3F,EAAA,EAAD,CAAU2F,MAAM,SAAhB,oBACA,cAAC3F,EAAA,EAAD,CAAU2F,MAAM,OAAhB,kBACA,cAAC3F,EAAA,EAAD,CAAU2F,MAAM,QAAhB,mBACA,cAAC3F,EAAA,EAAD,CAAU2F,MAAM,UAAhB,qBACA,cAAC3F,EAAA,EAAD,CAAU2F,MAAM,UAAhB,qBACA,cAAC3F,EAAA,EAAD,CAAU2F,MAAM,SAAhB,oBACA,cAAC3F,EAAA,EAAD,CAAU2F,MAAM,QAAhB,mBACA,cAAC3F,EAAA,EAAD,CAAU2F,MAAM,QAAhB,mBACA,cAAC3F,EAAA,EAAD,CAAU2F,MAAM,OAAhB,kBACA,cAAC3F,EAAA,EAAD,CAAU2F,MAAM,QAAhB,mBACA,cAAC3F,EAAA,EAAD,CAAU2F,MAAM,WAAhB,yBAGJ,cAACuE,GAAA,EAAD,CAAWvK,GAAG,iBAAiB+I,MAAM,0BAAoBlH,QAAQ,SAASmE,MAAOuC,EAAQN,eAAgBuC,SAAU,SAAA3K,GAAK,OAAIyJ,EAAkBzJ,EAAO,mBAAmB+K,QAAM,EAACH,WAAS,EAAxL,SAtIZ,WAEI,IADA,IAAIpI,EAAS,GACLwI,GAAK,IAAI3C,MAAQC,cAAe0C,GAAK,KAAMA,IAAKxI,EAAOkE,KAAKsE,GACpE,OAAOxI,EAqISyI,GAAQC,KAAI,SAAAC,GAAI,OAAI,cAAC3K,EAAA,EAAD,CAAU2F,MAAOgF,EAAjB,SAAmCA,GAAPA,QAIxD,cAAC,KAAD,CACIpD,YAAaA,GACbqD,KApSF,WAqSEjL,GAAG,QACHwK,SAAU,SAAA3K,GAAK,OAAIyJ,EAAkBzJ,EAAO,UAC5CmG,MAAOuC,EAAQF,MALnB,SAOK,kBAAM,cAACkC,GAAA,EAAD,CACHxB,MAAM,QACNlH,QAAQ,SACR4I,WAAS,EACTC,UAAQ,EACR7F,MAAuB,KAAhBA,EAAMwD,MACbsC,WAAY9F,EAAMwD,WAI1B,cAACkC,GAAA,EAAD,CACIvK,GAAG,QACHkL,KAAK,SACLnC,MAAM,WACNlH,QAAQ,SACRmE,MAAOuC,EAAQD,MACfkC,SAAUlB,EACVmB,WAAS,EACTU,QAAS,SAAAtL,GAAK,OAAIA,EAAM6J,OAAOkB,UAC/BQ,WAAY,CACRC,eAAgB,cAACC,GAAA,EAAD,CAAgBzK,SAAS,QAAzB,iBAEpB6J,UAAQ,EACR7F,MAAuB,KAAhBA,EAAMyD,MACbqC,WAAY9F,EAAMyD,QAGtC,cAAgBiD,GAAA,EAAhB,CAA4B/L,UAAWP,EAAQyI,SAAU+C,WAAS,EAAlE,SACoB,cAACe,GAAA,EAAD,CACIC,QAAS,cAAC3F,EAAA,EAAD,CAAUC,QAAS2C,EAAkB8B,SAAUlB,EAAmBtJ,GAAG,cAC9E+I,MAAM,iBAId,eAACjI,EAAA,EAAD,CAAStB,UAAWP,EAAQkC,QAA5B,UACI,cAAC0B,EAAA,EAAD,CACIqI,KAAK,SACLrJ,QAAQ,YACRlD,MAAM,YACNmK,SAAUE,EAAaF,SAJ3B,SAMKE,EAAaD,QAElB,cAAClG,EAAA,EAAD,CAAQhB,QAAQ,YAAYjC,QAhI5C,WAEOsJ,EAAYtF,GAAc,GAExBO,EAAQoC,KAAK,UA4HN,uBAMJ,gCAAMmF,KAAKC,UAAUpD,GAAS,uBAA9B,cAA+CE,WCnX/D,IAAMnK,GAAQsN,YAAe,CACzBhN,QAAS,CACLsM,KAAM,OACNpM,QAAS,CACL+M,KAAMC,IAAO,MAEjB5K,UAAW,CACP2K,KAAME,IAAK,SAKjB3N,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC0N,IAAK,CACD5K,gBAAiB9C,EAAMM,QAAQyC,WAAW4K,QAC1C1K,UAAW,QACX2K,cAAe,QAEnBC,OAAQ,CACJC,QAAS,OACTzN,MAAOL,EAAMM,QAAQC,KAAKC,QAC1BuN,WAAY/N,EAAMgO,WAAWD,gBAIrC,SAASE,KACL,IAAMtN,EAAUb,KAChB,OACI,cAACoO,EAAA,EAAD,CAAKhN,UAAWP,EAAQ+M,IAAxB,SACI,eAAC,IAAD,WACI,cAACrL,EAAD,IACA,cAAC6L,EAAA,EAAD,CAAKxM,GAAG,SAASR,UAAWP,EAAQkN,OAApC,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOM,KAAK,QAAZ,SACI,cAACnJ,GAAD,MAEJ,cAAC,IAAD,CAAOmJ,KAAK,OAAZ,SACI,cAAC5E,GAAD,MAGJ,cAAC,IAAD,CAAO4E,KAAK,YAAZ,SACI,cAAC5E,GAAD,WAIZ,cAAClG,EAAD,SAcD+K,OARf,WACI,OACI,cAACC,EAAA,EAAD,CAAerO,MAAOA,GAAtB,SACI,cAACiO,GAAD,OC1EGK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,SAM5Bb,O","file":"static/js/main.b527bff1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/karangos.637f9a06.png\";","import React from 'react';\nimport IconButton from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    menuLink: {\n        color: theme.palette.text.primary,\n        textDecoration: 'none'\n    }\n}));\n\nexport default function MainMenu() {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                <MenuIcon />\n            </IconButton>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}><Link className={classes.menuLink} to=\"/list\">Listagem de karangos</Link></MenuItem>\n                <MenuItem onClick={handleClose}><Link className={classes.menuLink} to=\"/new\">Cadastrar novo karango</Link></MenuItem>\n            </Menu>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport logoImg from '../img/karangos.png'\nimport MainMenu from './MainMenu'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    logo: {\n        width: '300px'\n    }\n}));\n\nexport default function TopBar() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <MainMenu />\n                    <img src={logoImg} className={classes.logo} alt=\"Logotipo Karangos\" />\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","// import Toolbar from '@material-ui/core/Toolbar'\nimport { Toolbar, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport LocalCafeTwoToneIcon from '@material-ui/icons/LocalCafeTwoTone';\n\nconst useStyles = makeStyles((theme) => ({\n    text: {\n        //backgroundColor: 'yellow',\n        width: '100%',\n        color: theme.palette.text.secondary\n    },\n    toolbar: {\n        backgroundColor: theme.palette.background.paper,\n        minHeight: '42px',\n        // Posicionando a barra no rodapé da página\n        width: '100%',\n        position: 'fixed',\n        bottom: 0\n    },\n    link: {\n        color: theme.palette.secondary.light,\n        textDecoration: 'none',  // retira o sublinhado do link\n        '&:hover': {\n            textDecoration: 'underline'   // retorna o sublinhado\n        }\n    }\n}));\n\nexport default function FooterBar() {\n    const classes = useStyles();\n    return (\n        <Toolbar className={classes.toolbar}>\n            <Typography variant=\"caption\" align=\"center\" className={classes.text}>\n                Desenvolvido com <LocalCafeTwoToneIcon fontSize=\"small\" /> por <a href=\"mailto:ga.karmo@gmail.com \" className={classes.link}>Karmo</a>\n            </Typography>\n        </Toolbar>\n    )\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function ConfirmDialog({title = 'Confirmar', isOpen = false, onClose, children}) {\n\n    const handleClose = (result) => {\n        // Só chama a função onClose se a prop correspondente tiver sido passada\n        if(onClose) onClose(result)\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={isOpen}\n                onClose={() => handleClose(false)}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {children}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => handleClose(true)} color=\"primary\">\n                        OK\n                    </Button>\n                    <Button onClick={() => handleClose(false)} color=\"primary\" autoFocus>\n                        Cancelar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport AddBoxIcon from '@material-ui/icons/AddBox'\nimport { useHistory } from 'react-router-dom'\nimport ConfirmDialog from '../ui/ConfirmDialog'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport { DataGrid } from '@material-ui/data-grid'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        minWidth: 650,\n    },\n    dataGrid: {\n        '& .MuiDataGrid-row button': {  // Esconde os botões na linha de tabela \"normal\"\n            visibility: 'hidden'\n        },\n        '& .MuiDataGrid-row:hover button': { // Exibe os botões de volta quando o mouse passar por cima\n            visibility: 'visible'\n        }\n    },\n    toolbar: {\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n        margin: theme.spacing(2, 0)\n    }\n}))\n\nexport default function KarangosList() {\n    const classes = useStyles()\n\n    // Variáveis que conterão dados PRECISAM ser inicializadas como vetores vazios\n    const [karangos, setKarangos] = useState([])\n    const [deletable, setDeletable] = useState()        // Código do registro a ser excluído\n    const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\n    const [sbOpen, setSbOpen] = useState(false)\n    const [sbSeverity, setSbSeverity] = useState('success')\n    const [sbMessage, setSbMessage] = useState('Exclusão realizada com sucesso.')\n\n    const history = useHistory()\n\n    useEffect(() => {\n        // Atrasa a busca dos dados em 100ms\n        setTimeout(() => getData(), 100)\n    }, []) // Quando a lista de dependências é um vetor vazio, o useEffect()\n    // é executado apenas uma vez, no carregamento inicial do componente\n\n    async function getData() {\n        try { // tenta buscar os dados\n            let response = await axios.get('https://api.faustocintra.com.br/karangos?by=marca,modelo')\n            if(response.data.length > 0) setKarangos(response.data)\n        }\n        catch(error) {\n            console.error(error)\n        }\n    }\n\n    async function deleteItem() {\n        try {\n            await axios.delete(`https://api.faustocintra.com.br/karangos/${deletable}`)\n            getData()     // Atualiza os dados da tabela\n            setSbSeverity('success')\n            setSbMessage('Exclusão efetuada com sucesso.')\n        }\n        catch(error) {\n            setSbSeverity('error')\n            setSbMessage('ERRO: ' + error.message)\n        }\n        setSbOpen(true)   // Exibe a snackbar\n    }\n\n    function handleDialogClose(result) {\n        setDialogOpen(false)\n\n        // Se o usuário concordou com a exclusão \n        if(result) deleteItem()\n    }\n\n    function handleDelete(id) {\n        setDeletable(id)\n        setDialogOpen(true)\n    }\n\n    function handleSbClose() {\n        setSbOpen(false)    // Fecha a snackbar\n    }\n\n    const columns = [\n        {\n            field: 'id', \n            headerName: 'Cód.',\n            align: 'right',\n            headerAlign: 'right',  \n            flex: true,\n            //disableCollumnMenu: true,\n            sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\n        },\n        { \n            field: 'marca', \n            headerName: 'Marca',\n            flex: true \n        },\n        { \n            field: 'modelo', \n            headerName: 'Modelo',\n            flex: true \n        },\n        {\n            field: 'cor', \n            headerName: 'Cor',\n            align: 'center',\n            headerAlign: 'center', \n            flex: true \n        },\n        {\n            field: 'ano_fabricacao', \n            headerName: 'Ano',\n            align: 'center',\n            headerAlign: 'center', \n            flex: true,\n            sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1 \n        },\n        {\n            field: 'importado', \n            headerName: 'Importado?',\n            align: 'center', \n            headerAlign: 'center', \n            flex: true,\n            renderCell: params => (\n                <Checkbox checked={params.value === \"1\"} readOnly />\n            )\n        },\n        {\n            field: 'placa', \n            headerName: 'Placa',\n            align: 'center', \n            headerAlign: 'center', \n            flex: true \n        },\n        {\n            field: 'preco', \n            headerName: 'Preço',\n            align: 'right',\n            headerAlign: 'right', \n            flex: true,\n            valueFormatter: params => (\n                Number(params.value).toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })\n            ),\n            sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\n        },\n        {\n            field: 'editar',\n            headerName: 'Editar',\n            align: 'center', \n            headerAlign: 'center', \n            flex: true,\n            renderCell: params => (\n                <IconButton aria-label=\"editar\" onClick={() => history.push(`/edit/${params.id}`)}>\n                    <EditIcon />\n                </IconButton>\n            )\n        },\n        {\n            field: 'excluir',\n            headerName: 'Excluir',\n            align: 'center', \n            headerAlign: 'center', \n            flex: true,\n            renderCell: params => (\n                <IconButton aria-label=\"excluir\" onClick={() => handleDelete(params.id)}>\n                    <DeleteIcon color=\"error\" />\n                </IconButton>\n            )\n        },\n    ]\n\n    return (\n        <>\n            <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\n                Deseja realmente excluir este karango?\n            </ConfirmDialog>\n\n            <Snackbar open={sbOpen} autoHideDuration={6000} onClose={handleSbClose}>\n                <MuiAlert elevation={6} variant=\"filled\" onClose={handleSbClose} severity={sbSeverity}>\n                    {sbMessage}\n                </MuiAlert>\n            </Snackbar>\n\n            <h1>Listagem de Karangos</h1>\n            <Toolbar className={classes.toolbar}>\n                <Button color=\"secondary\" variant=\"contained\" size=\"large\" \n                startIcon={<AddBoxIcon />} onClick={() => history.push('/new')}>\n                    Novo Karango\n                </Button>\n            </Toolbar>\n            <Paper elevation={4}>\n                <DataGrid className={classes.dataGrid} rows={karangos} columns={columns} pageSize={10} autoHeight={true} disableSelectionOnClick={true} />\n            </Paper>\n        </>\n    )\n}","import {useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport InputMask from 'react-input-mask'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useHistory, useParams } from 'react-router-dom'\nimport ConfirmDialog from '../ui/ConfirmDialog'\n\nconst useStyles = makeStyles(() => ({\n    form: {\n        maxWidth: '90%',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        '& .MuiFormControl-root': {\n            minWidth: '200px',\n            maxWidth: '500px',\n            margin: '0 24px 24px 0',\n            marginBottom: '24px'\n        },\n    },\n    toolbar: {\n        marginTop: '36px',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-around'\n    },\n    checkbox: {\n        alignItems: 'center'\n    }\n}))\n\n/*  Classes de caracteres de entrada para a máscara do campo placa\n    1) Três primeiras posições: qualquer letra, de A a Z (maiúsculo ou minúsculo) ~> [A-Za-z]\n    2) Posições numéricas (a 1º, a 3º e a 4º depois do traço) ~> [0-9]\n    3) 2º posição após o traço: pode receber dígitos ou letra de A a J (maiúsculas ou minúsculas) ~> [0-9A-Ja-j]\n\n*/\n\n// Repesentando as classes de caracteres da máscara como um objeto\nconst formatChars = {\n    'A': '[A-Za-z]',\n    '0': '[0-9]',\n    '#': '[0-9A-Ja-j]'\n}\n\n// Finalmente, a máscara de entrada do campo placa\nconst placaMask = 'AAA-0#00'\n\n// Máscara para CPF: '000.000.000-00'\n// Máscara para CNPJ: '00.000.000/0001-00'\n\n\nexport default function KarangosForm() {\n    const classes = useStyles()\n\n    const [karango, setKarango] = useState({\n        id: null,\n        marca: '',\n        modelo: '',\n        cor: '',\n        ano_fabricacao: (new Date()).getFullYear(),  // Ano corrente\n        importado: '0',\n        placa: '',\n        preco: 0\n    })\n    const [currentId, setCurrentId] = useState()\n    const [importadoChecked, setImportadoChecked] = useState()\n\n    const [snackState, setSnackState] = useState({\n        open: false,\n        severity: 'success',\n        message: 'Karango salvo com sucesso'\n    })\n\n    const [btnSendState, setBtnSendState] = useState({\n        disabled: false,\n        label: 'Enviar'\n    })\n\n    const [error, setError] = useState({\n        marca: '',\n        modelo: '',\n        cor: '',\n        placa: '',\n        preco: ''\n    })\n\n    const [isModified, setIsModified] = useState(false) // Controla se o formulário foi modificado ou não\n\n    const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\n\n    const [title, setTitle] = useState('Cadastrar Novo Karango')\n\n    const history = useHistory()\n    const params = useParams()\n\n    useEffect(() => {\n        // Verifica se tem o parâmetro id na rota. Se tiver, temos que buscar os dados do registro no back-end para edição\n        if(params.id) {\n            setTitle('Editando Karango')\n            getData(params.id)\n        }\n    }, [])\n\n    async function getData(id) {\n        try {\n            let response = await axios.get(`http://api.faustocintra.com.br/karangos/${id}`)\n            setKarango(response.data)\n        }\n        catch(error) {\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'Não foi possível carregar os dados para edição.'\n            })\n        }\n    }\n\n    function handleInputChange(event, property) {\n\n        const karangoTemp = {...karango}\n        let importadoCheckedTemp = importadoChecked\n\n        // Se houver id no event.target, ele será o nome da propriedade, senão, usaremos o valor do segundo parâmetro\n        if(event.target.id) property = event.target.id\n\n        if(property === 'importado') {\n            const newState =! importadoChecked\n            //setKarango({...karango, importado: (newState ? '1': '0')})\n            karangoTemp.importado = (newState ? '1': '0')\n            //setImportadoChecked(newState)\n            importadoCheckedTemp = newState\n        }\n        else if(property === 'placa') {\n            //setKarango({...karango, [property]: event.target.value.toUpperCase()})\n            karangoTemp[property] = event.target.value.toUpperCase()\n        }\n        else {\n            // Quando o nome de uma propriedade de um objeto aparece entre [], isso se chama \"propriedade calculada\". O nome da propriedade vai corresponder à avaliação da expressão entre os colchetes\n            //setCurrentId(event.target.id) -- só para debug\n            //setKarango({...karango, [property]: event.target.value})\n            karangoTemp[property] = event.target.value\n        }\n        setKarango(karangoTemp)\n        setImportadoChecked(importadoCheckedTemp)\n        setIsModified(true)    // O formulário foi modificado\n        validate(karangoTemp)   // Dispara a validação\n    }\n\n    function validate(data) {\n        const errorTemp = {\n            marca: '',\n            modelo: '',\n            cor: '',\n            placa: '',\n            preco: ''\n        }\n        let isValid = true\n\n        // trim(): retira espaços em branco do início e do final de uma string\n        // Validação do campo marca\n        if(data.marca.trim() === '') {\n            errorTemp.marca = 'A marca deve ser preenchida'\n            isValid = false\n        }\n\n        // Validação do campo modelo\n        if(data.modelo.trim() === '') {\n            errorTemp.modelo = 'O modelo deve ser preenchido'\n            isValid = false\n        }\n\n        // Validação do campo cor\n        if(data.cor.trim() === '') {\n            errorTemp.cor = 'Escolha uma cor'\n            isValid = false\n        }\n\n        // Validação do campo placa\n        // O valor válido não pode ser string vazia nem conter o caractere _)\n        if(data.placa.trim() === '' || data.placa.includes('_')) {\n            errorTemp.placa = 'A placa deve ser preenchida corretamente'\n            isValid = false\n        }\n\n        // Validação do campo preço\n        // O valor válido deve ser númerico e maior do que zero\n        if(isNaN(data.preco) || Number(data.preco) <= 0) {\n            errorTemp.preco = 'O preço deve ser preenchido e maior que zero'\n            isValid = false\n        }\n\n        setError(errorTemp)\n        return isValid\n    }\n\n    function years() {\n        let result = []\n        for(let i = (new Date()).getFullYear(); i >= 1900; i--) result.push(i)\n        return result\n    }\n\n    async function saveData() {\n        try {\n            // Desabilitar o botão Enviar\n            setBtnSendState({disabled: true, label: 'Enviando...'})\n\n            // Se o registro já existe (edição)\n            if(params.id) await axios.put(`https://api.faustocintra.com.br/karangos/${params.id}`, karango)\n            // Registro não existe, cria um novo (verbo http POST)\n            else await axios.post('https://api.faustocintra.com.br/karangos', karango)\n\n            setSnackState({\n                open: true,\n                severity: 'success',\n                message: 'Karango salvo com sucesso!'\n            })\n            //alert('Dados salvos com sucesso!')\n        }\n        catch(error) {\n            //alert('Erro: ' + error.message)\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'Erro: ' + error.message\n            })\n        }\n        // Reabilitar o botão Enviar\n        setBtnSendState({disabled: false, label: 'Enviar'})\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault() // Evitar o recarregamento da página\n\n        // Só salva os dados se eles forem válidos\n        if(validate(karango)) saveData()\n    }\n\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    function handleSnackClose(event, reason) {\n        // Evita que a snackbar seja fechada clicando-se fora dela\n        if(reason === 'clickaway') return\n        setSnackState({...snackState, open: false})  // Fecha a snackbar\n\n        // Retorna à página de listagem\n        history.push('/list')\n    }\n\n    function handleDialogClose(result) {\n        setDialogOpen(false)\n\n        // Se o usuário concordou em voltar\n        if(result) history.push('/list')\n    }\n\n    function handleGoBack() {\n        // Se o formulário estiver modificado, mostramos o diálogo de confirmação\n        if(isModified) setDialogOpen(true)\n        // Senão, voltamos diretamente à página de listagem\n        else history.push('/list')\n    }\n\n    return (\n        <>\n            <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\n                Há dados não salvos. Deseja realmente voltar?\n            </ConfirmDialog>\n\n            <Snackbar open={snackState.open} autoHideDuration={6000} onClose={handleSnackClose}>\n                <Alert onClose={handleSnackClose} severity={snackState.severity}>\n                    {snackState.message}\n                </Alert>\n            </Snackbar>\n\n            <h1>{title}</h1>\n            <form className={classes.form}>\n                <TextField\n                    id=\"marca\"\n                    label=\"Marca\"\n                    variant=\"filled\"\n                    value={karango.marca}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.marca !== ''}\n                    helperText={error.marca}\n                />\n\n                <TextField\n                    id=\"modelo\"\n                    label=\"Modelo\"\n                    variant=\"filled\"\n                    value={karango.modelo}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.modelo !== ''}\n                    helperText={error.modelo}\n                />\n\n                <TextField\n                    id=\"cor\"\n                    label=\"Cor\"\n                    variant=\"filled\"\n                    value={karango.cor}\n                    onChange={event => handleInputChange(event, 'cor')}\n                    select\n                    fullWidth\n                    required\n                    error={error.cor !== ''}\n                    helperText={error.cor}\n                >\n                    <MenuItem value=\"Amarelo\">Amarelo</MenuItem>\n                    <MenuItem value=\"Azul\">Azul</MenuItem>\n                    <MenuItem value=\"Branco\">Branco</MenuItem>\n                    <MenuItem value=\"Bege\">Bege</MenuItem>\n                    <MenuItem value=\"Cinza\">Cinza</MenuItem>\n                    <MenuItem value=\"Dourado\">Dourado</MenuItem>\n                    <MenuItem value=\"Laranja\">Laranja</MenuItem>\n                    <MenuItem value=\"Marrom\">Marrom</MenuItem>\n                    <MenuItem value=\"Prata\">Prata</MenuItem>\n                    <MenuItem value=\"Preto\">Preto</MenuItem>\n                    <MenuItem value=\"Roxo\">Roxo</MenuItem>\n                    <MenuItem value=\"Verde\">Verde</MenuItem>\n                    <MenuItem value=\"Vermelho\">Vermelho</MenuItem>\n                </TextField>\n\n                <TextField id=\"ano_fabricacao\" label=\"Ano de Fabricação\" variant=\"filled\" value={karango.ano_fabricacao} onChange={event => handleInputChange(event, 'ano_fabricacao')} select fullWidth>\n                    {\n                        years().map(year => <MenuItem value={year} key={year}>{year}</MenuItem>)\n                    }\n                </TextField>\n\n                <InputMask\n                    formatChars={formatChars}\n                    mask={placaMask}\n                    id=\"placa\"\n                    onChange={event => handleInputChange(event, 'placa')}\n                    value={karango.placa}\n                >\n                    {() => <TextField\n                        label=\"Placa\"\n                        variant=\"filled\"\n                        fullWidth\n                        required\n                        error={error.placa !== ''}\n                        helperText={error.placa}\n                    />}\n                </InputMask>\n\n                <TextField\n                    id=\"preco\"\n                    type=\"number\"\n                    label=\"Preço\"\n                    variant=\"filled\"\n                    value={karango.preco}\n                    onChange={handleInputChange}\n                    fullWidth\n                    onFocus={event => event.target.select()}\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>\n                    }}\n                    required\n                    error={error.preco !== ''}\n                    helperText={error.preco}\n                />\n\n<               FormControl className={classes.checkbox} fullWidth>\n                    <FormControlLabel\n                        control={<Checkbox checked={importadoChecked} onChange={handleInputChange} id=\"importado\" />}\n                        label=\"Importado?\"\n                    />\n                </FormControl>\n\n                <Toolbar className={classes.toolbar}>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        disabled={btnSendState.disabled}\n                    >\n                        {btnSendState.label}\n                    </Button>\n                    <Button variant=\"contained\" onClick={handleGoBack}>\n                        Voltar\n                    </Button>\n                </Toolbar>\n\n\n                <div>{JSON.stringify(karango)}<br/>currentId: {currentId}</div>\n            </form>\n        </>\n    )\n}","/*import logo from './logo.svg';\nimport './App.css';\nimport Button from '@material-ui/core/Button'\n\n<div className=\"App\">\n    <header className=\"App-header\">\n        <h1>Projeto Karangos</h1>\n        <Button variant=\"contained\" color=\"primary\">Clique aqui</Button>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n            Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n            Learn React\n        </a>\n    </header>\n</div> */\n\nimport TopBar from './ui/TopBar'\nimport FooterBar from './ui/FooterBar'\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport yellow from '@material-ui/core/colors/yellow';\nimport pink from '@material-ui/core/colors/pink';\nimport { Box } from '@material-ui/core';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport KarangosList from './routed/KarangosList2';\nimport KarangosForm from './routed/KarangosForm'\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: yellow[500],\n        },\n        secondary: {\n            main: pink[500],\n        },\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    box: {\n        backgroundColor: theme.palette.background.default,\n        minHeight: '100vh',  // 100% da altura da área visível\n        paddingBottom: '42px'\n    },\n    routed: {\n        padding: '25px',\n        color: theme.palette.text.primary,\n        fontFamily: theme.typography.fontFamily\n    }\n}));\n\nfunction Main() {\n    const classes = useStyles();\n    return (\n        <Box className={classes.box}>\n            <BrowserRouter>\n                <TopBar />\n                <Box id=\"routed\" className={classes.routed}>\n                    <Switch>\n                        <Route path=\"/list\">\n                            <KarangosList />\n                        </Route>\n                        <Route path=\"/new\">\n                            <KarangosForm />\n                        </Route>\n                        {/* :id é um parâmetro (nomes de parâmetros começam com dois pontos) */}\n                        <Route path=\"/edit/:id\">\n                            <KarangosForm />\n                        </Route>\n                    </Switch>\n                </Box>\n                <FooterBar />\n            </BrowserRouter>\n        </Box>\n    )\n}\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <Main />\n        </ThemeProvider>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}